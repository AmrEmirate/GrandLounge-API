
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  role: 'role',
  fullName: 'fullName',
  email: 'email',
  password: 'password',
  profilePicture: 'profilePicture',
  provider: 'provider',
  providerId: 'providerId',
  verified: 'verified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.TenantScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyName: 'companyName',
  addressCompany: 'addressCompany',
  phoneNumberCompany: 'phoneNumberCompany',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  deletedAt: 'deletedAt'
};

exports.Prisma.AmenityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  deletedAt: 'deletedAt'
};

exports.Prisma.CityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  provinsi: 'provinsi',
  latitude: 'latitude',
  longitude: 'longitude',
  deletedAt: 'deletedAt'
};

exports.Prisma.PropertyScalarFieldEnum = {
  id: 'id',
  tenantId: 'tenantId',
  name: 'name',
  categoryId: 'categoryId',
  description: 'description',
  address: 'address',
  cityId: 'cityId',
  zipCode: 'zipCode',
  mainImage: 'mainImage',
  latitude: 'latitude',
  longitude: 'longitude',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PropertyImageScalarFieldEnum = {
  id: 'id',
  propertyId: 'propertyId',
  imageUrl: 'imageUrl'
};

exports.Prisma.RoomScalarFieldEnum = {
  id: 'id',
  propertyId: 'propertyId',
  name: 'name',
  category: 'category',
  description: 'description',
  bedOption: 'bedOption',
  capacity: 'capacity',
  basePrice: 'basePrice',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.RoomAvailabilityScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  isAvailable: 'isAvailable',
  date: 'date',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PeakSeasonScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  name: 'name',
  startDate: 'startDate',
  endDate: 'endDate',
  adjustmentValue: 'adjustmentValue',
  adjustmentType: 'adjustmentType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  propertyId: 'propertyId',
  invoiceNumber: 'invoiceNumber',
  reservationId: 'reservationId',
  checkIn: 'checkIn',
  checkOut: 'checkOut',
  totalPrice: 'totalPrice',
  status: 'status',
  paymentDeadline: 'paymentDeadline',
  paymentProof: 'paymentProof',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookingRoomScalarFieldEnum = {
  id: 'id',
  bookingId: 'bookingId',
  roomId: 'roomId',
  guestCount: 'guestCount',
  pricePerNight: 'pricePerNight',
  numberOfNights: 'numberOfNights',
  totalPrice: 'totalPrice',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  propertyId: 'propertyId',
  bookingId: 'bookingId',
  rating: 'rating',
  comment: 'comment',
  tenantReply: 'tenantReply',
  reply: 'reply',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.TokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  purpose: 'purpose',
  expiresAt: 'expiresAt',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  TENANT: 'TENANT',
  USER: 'USER'
};

exports.BookingStatus = exports.$Enums.BookingStatus = {
  MENUNGGU_PEMBAYARAN: 'MENUNGGU_PEMBAYARAN',
  MENUNGGU_KONFIRMASI: 'MENUNGGU_KONFIRMASI',
  DIPROSES: 'DIPROSES',
  DIBATALKAN: 'DIBATALKAN',
  SELESAI: 'SELESAI'
};

exports.BedOption = exports.$Enums.BedOption = {
  SINGLE: 'SINGLE',
  DOUBLE: 'DOUBLE',
  TWIN: 'TWIN'
};

exports.RoomCategory = exports.$Enums.RoomCategory = {
  STANDARD: 'STANDARD',
  DELUXE: 'DELUXE',
  SUITE: 'SUITE'
};

exports.TokenPurpose = exports.$Enums.TokenPurpose = {
  EMAIL_VERIFICATION: 'EMAIL_VERIFICATION',
  PASSWORD_RESET: 'PASSWORD_RESET',
  EMAIL_CHANGE: 'EMAIL_CHANGE'
};

exports.AdjustmentType = exports.$Enums.AdjustmentType = {
  NOMINAL: 'NOMINAL',
  PERCENTAGE: 'PERCENTAGE'
};

exports.Prisma.ModelName = {
  User: 'User',
  Tenant: 'Tenant',
  Category: 'Category',
  Amenity: 'Amenity',
  City: 'City',
  Property: 'Property',
  PropertyImage: 'PropertyImage',
  Room: 'Room',
  RoomAvailability: 'RoomAvailability',
  PeakSeason: 'PeakSeason',
  Booking: 'Booking',
  BookingRoom: 'BookingRoom',
  Review: 'Review',
  Token: 'Token'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\CODING\\PURWADHIKA\\FINAL PROJECT\\BE-FINPRO-GRANDLONGE\\prisma\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\CODING\\PURWADHIKA\\FINAL PROJECT\\BE-FINPRO-GRANDLONGE\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/client\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\nenum UserRole {\n  TENANT\n  USER\n}\n\nenum BookingStatus {\n  MENUNGGU_PEMBAYARAN\n  MENUNGGU_KONFIRMASI\n  DIPROSES\n  DIBATALKAN\n  SELESAI\n}\n\nenum BedOption {\n  SINGLE\n  DOUBLE\n  TWIN\n}\n\nenum RoomCategory {\n  STANDARD\n  DELUXE\n  SUITE\n}\n\nenum TokenPurpose {\n  EMAIL_VERIFICATION\n  PASSWORD_RESET\n  EMAIL_CHANGE\n}\n\nenum AdjustmentType {\n  NOMINAL\n  PERCENTAGE\n}\n\nmodel User {\n  id             String    @id @default(uuid())\n  role           UserRole\n  fullName       String\n  email          String    @unique\n  password       String?\n  profilePicture String?\n  provider       String?\n  providerId     String?\n  verified       Boolean   @default(false)\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n  deletedAt      DateTime?\n  tenant         Tenant?\n  bookings       Booking[]\n  reviews        Review[]\n  tokens         Token[]\n\n  @@unique([provider, providerId])\n}\n\nmodel Tenant {\n  id                 String     @id @default(uuid())\n  userId             String     @unique\n  companyName        String\n  addressCompany     String\n  phoneNumberCompany String\n  createdAt          DateTime   @default(now())\n  updatedAt          DateTime   @updatedAt\n  deletedAt          DateTime?\n  user               User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  properties         Property[]\n}\n\nmodel Category {\n  id         String     @id @default(uuid())\n  name       String     @unique\n  properties Property[]\n  deletedAt  DateTime?\n}\n\nmodel Amenity {\n  id         String     @id @default(uuid())\n  name       String     @unique\n  properties Property[] @relation()\n  deletedAt  DateTime?\n}\n\nmodel City {\n  id         String     @id @default(uuid())\n  name       String     @unique\n  provinsi   String\n  latitude   Float\n  longitude  Float\n  properties Property[]\n  deletedAt  DateTime?\n}\n\nmodel Property {\n  id          String          @id @default(uuid())\n  tenantId    String\n  name        String\n  categoryId  String\n  description String\n  address     String?\n  cityId      String\n  zipCode     String\n  mainImage   String?\n  latitude    Float?\n  longitude   Float?\n  deletedAt   DateTime?\n  createdAt   DateTime        @default(now())\n  updatedAt   DateTime        @updatedAt\n  city        City            @relation(fields: [cityId], references: [id])\n  tenant      Tenant          @relation(fields: [tenantId], references: [id], onDelete: Cascade)\n  category    Category        @relation(fields: [categoryId], references: [id])\n  images      PropertyImage[]\n  rooms       Room[]\n  bookings    Booking[]\n  reviews     Review[]\n  amenities   Amenity[]       @relation()\n\n  @@index([categoryId])\n  @@index([cityId])\n}\n\nmodel PropertyImage {\n  id         String   @id @default(uuid())\n  propertyId String\n  imageUrl   String\n  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)\n}\n\nmodel Room {\n  id             String             @id @default(uuid())\n  propertyId     String\n  name           String\n  category       RoomCategory\n  description    String\n  bedOption      BedOption\n  capacity       Int\n  basePrice      Float\n  createdAt      DateTime           @default(now())\n  updatedAt      DateTime           @updatedAt\n  deletedAt      DateTime?\n  property       Property           @relation(fields: [propertyId], references: [id], onDelete: Cascade)\n  availabilities RoomAvailability[]\n  bookingRooms   BookingRoom[]\n  peakSeasons    PeakSeason[]\n}\n\nmodel RoomAvailability {\n  id          String   @id @default(uuid())\n  roomId      String\n  isAvailable Boolean  @default(true)\n  date        DateTime @db.Date\n  price       Float\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  room        Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)\n\n  @@unique([roomId, date])\n}\n\nmodel PeakSeason {\n  id              String         @id @default(uuid())\n  roomId          String\n  name            String\n  startDate       DateTime       @db.Date\n  endDate         DateTime       @db.Date\n  adjustmentValue Float\n  adjustmentType  AdjustmentType\n  room            Room           @relation(fields: [roomId], references: [id], onDelete: Cascade)\n  createdAt       DateTime       @default(now())\n  updatedAt       DateTime       @updatedAt\n}\n\nmodel Booking {\n  id              String        @id @default(uuid())\n  userId          String\n  propertyId      String\n  invoiceNumber   String        @unique\n  reservationId   String?       @unique @default(uuid())\n  checkIn         DateTime\n  checkOut        DateTime\n  totalPrice      Float\n  status          BookingStatus @default(MENUNGGU_PEMBAYARAN)\n  paymentDeadline DateTime\n  paymentProof    String?\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n  property        Property      @relation(fields: [propertyId], references: [id])\n  bookingRooms    BookingRoom[]\n  review          Review?\n}\n\nmodel BookingRoom {\n  id             String   @id @default(uuid())\n  bookingId      String\n  roomId         String\n  guestCount     Int\n  pricePerNight  Float\n  numberOfNights Int\n  totalPrice     Float\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n  booking        Booking  @relation(fields: [bookingId], references: [id], onDelete: Cascade)\n  room           Room     @relation(fields: [roomId], references: [id])\n}\n\nmodel Review {\n  id          String    @id @default(uuid())\n  userId      String\n  propertyId  String\n  bookingId   String    @unique\n  rating      Int\n  comment     String?\n  tenantReply String?\n  reply       String?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  deletedAt   DateTime?\n  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  property    Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)\n  booking     Booking   @relation(fields: [bookingId], references: [id], onDelete: Cascade)\n}\n\nmodel Token {\n  id        String       @id @default(uuid())\n  token     String       @unique\n  purpose   TokenPurpose\n  expiresAt DateTime\n  userId    String\n  createdAt DateTime     @default(now())\n  user      User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n",
  "inlineSchemaHash": "e6316f540b4565b50e74e6c19895935608ca833c14acb8ba98b35224eabdfa19",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePicture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"TenantToUser\"},{\"name\":\"bookings\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"},{\"name\":\"tokens\",\"kind\":\"object\",\"type\":\"Token\",\"relationName\":\"TokenToUser\"}],\"dbName\":null},\"Tenant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressCompany\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumberCompany\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TenantToUser\"},{\"name\":\"properties\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"PropertyToTenant\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"properties\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"CategoryToProperty\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Amenity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"properties\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"AmenityToProperty\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"City\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provinsi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"properties\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"CityToProperty\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Property\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mainImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToProperty\"},{\"name\":\"tenant\",\"kind\":\"object\",\"type\":\"Tenant\",\"relationName\":\"PropertyToTenant\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProperty\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"PropertyImage\",\"relationName\":\"PropertyToPropertyImage\"},{\"name\":\"rooms\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"PropertyToRoom\"},{\"name\":\"bookings\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToProperty\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"PropertyToReview\"},{\"name\":\"amenities\",\"kind\":\"object\",\"type\":\"Amenity\",\"relationName\":\"AmenityToProperty\"}],\"dbName\":null},\"PropertyImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"PropertyToPropertyImage\"}],\"dbName\":null},\"Room\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"RoomCategory\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bedOption\",\"kind\":\"enum\",\"type\":\"BedOption\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"PropertyToRoom\"},{\"name\":\"availabilities\",\"kind\":\"object\",\"type\":\"RoomAvailability\",\"relationName\":\"RoomToRoomAvailability\"},{\"name\":\"bookingRooms\",\"kind\":\"object\",\"type\":\"BookingRoom\",\"relationName\":\"BookingRoomToRoom\"},{\"name\":\"peakSeasons\",\"kind\":\"object\",\"type\":\"PeakSeason\",\"relationName\":\"PeakSeasonToRoom\"}],\"dbName\":null},\"RoomAvailability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"RoomToRoomAvailability\"}],\"dbName\":null},\"PeakSeason\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"adjustmentValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"adjustmentType\",\"kind\":\"enum\",\"type\":\"AdjustmentType\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"PeakSeasonToRoom\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Booking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reservationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkIn\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkOut\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BookingStatus\"},{\"name\":\"paymentDeadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentProof\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BookingToUser\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"BookingToProperty\"},{\"name\":\"bookingRooms\",\"kind\":\"object\",\"type\":\"BookingRoom\",\"relationName\":\"BookingToBookingRoom\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"BookingToReview\"}],\"dbName\":null},\"BookingRoom\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"guestCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pricePerNight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"numberOfNights\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToBookingRoom\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"BookingRoomToRoom\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"propertyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tenantReply\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reply\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"},{\"name\":\"property\",\"kind\":\"object\",\"type\":\"Property\",\"relationName\":\"PropertyToReview\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToReview\"}],\"dbName\":null},\"Token\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purpose\",\"kind\":\"enum\",\"type\":\"TokenPurpose\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TokenToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

